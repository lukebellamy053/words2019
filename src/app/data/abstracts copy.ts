export const manea_abstract = `A pattern $\alpha$ (i.e., a string of variables and terminals) matches a word $w$, if $w$ can be obtained by uniformly replacing the variables of $\alpha$ by terminal words. The respective matching problem, i.e., deciding whether or not a given pattern matches a given word, is generally NP-complete, but can be solved in polynomial-time for classes of patterns with restricted structure. In this talk we overview a series of recent results related to efficient matching for patterns with variables, as well as a series of extensions of this problem.`;

export const puzynina_abstract = `Abelian properties of words is a widely studied field in combinatorics on words. Two finite words are abelian equivalent if for each letter they contain the same numbers of occurrences of this letter. In this paper, we give a short overview of some directions of research on abelian properties of words, and discuss in more detail two new problems: small abelian complexity of
two-dimensional words, and abelian subshifts.`;

export const restivo_abstract = `Given a (finite or infinite) subset $X$ of the free monoid $A^*$ over a finite alphabet $A$, the rank of $X$ is the minimal cardinality of a set $F$ such that $X \subseteq F^*$.
A submonoid $M$ generated by $k$ elements of $A^*$ is $k$-maximal if there does not exist another submonoid generated by at most $k$ words containing $M$. We call a set $X \subseteq A^*$ primitive if it is the basis of a $|X|$-maximal submonoid. By definition, for any set $X$, there exists a primitive set $Y$ such that $X \subseteq Y^*$. The set $Y$ is therefore called a primitive root of $X$. As a main result, we prove that if a set has rank $2$, then it has a unique primitive root.
For a single word $w$,  we say that the set $\{x,y\}$ is a {\em binary root} of $w$ if $w$ can be written as a concatenation of copies of $x$ and $y$ and $\{x,y\}$ is a primitive set. We prove that every primitive word $w$ has at most one binary root $\{x,y\}$ such that $|x|+|y|<\sqrt{|w|}$. Our results are also compared to previous approaches that investigate pseudo-repetitions, where a morphic involutive function $\theta$ is defined on $A^*$. `;

export const richomme_abstract = `Given a set $S$ of morphisms, an infinite word is $S$-adic if it can be recursively desubstituted using morphisms in $S$. 
Substitutive-adicity arises naturally in various studies especially in studies on infinite words with factor complexity bounded by an affine function.
In the literature, when a family $F$ of infinite words defined by a combinatorial property $P$ appears to be $S$-adic for some set of $S$ of morphisms, it is very rare that the whole set of $S$-adic words coincides with $F$. We survey such situations in which necessarily morphisms of $S$ preserve the property $P$ of infinite words.`;

export const saarela_abstract = `A system of equations is called independent if it is not equivalent to any of its proper subsystems. We consider the following decades-old question: If we fix the number of variables, then what is the maximal size of an independent system of constant-free word equations? This can be easily answered in the trivial cases of one and two variables, but all other cases remain open, even the three-variable case, where the conjectured answer is as small as three. We survey some historical as well as more recent results related to this question, starting with the one known as Ehrenfeucht's compactness property: Every infinite system is equivalent to a finite subsystem, and consequently an independent system cannot be infinite. We also discuss several variations and related questions on word equations. Finally, we pay special attention to the following result from 2018: The maximal size of an independent system of three-variable equations is at most 18. This is the first such finite upper bound, but hopefully it will not be the last.`;

export const vuskovic_abstract = `In this talk we survey structural characterizations of different hereditary graph classes (i.e. classes closed under deletion of vertices), focusing on their algorithmic consequences. Robertson and Seymour, in their famous Graph Minors Project, elucidated the structure of graph classes that are closed under vertex deletion, and deletion and contraction of edges (i.e. minor-closed). Their structural characterization had far reaching algorithmic consequences. Hereditary graph classes on the other hand are a lot more complex, and a whole new set of tools is needed to understand them structurally and to try to extract efficient algorithms from their structure.`;
